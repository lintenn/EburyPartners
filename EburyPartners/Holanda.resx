<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="bBack.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAADoAAAA6CAYAAADhu0ooAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        wQAADsEBuJFr7QAABERJREFUaEPtmkmoV2UYh6+ZOWQ5VWopiS4ixYkyNRduilJUckBt0aIWLsQBhZwj
        yxaK0UZQwSkIKosQpcDACcEhR8RFqIQ0aINpjpmZw/NIBw6Xc//3nP/k/1y+HzzgXXjPeb/3e8dz64KC
        goKCgoKCakUPwGPQ4f9/N0k9DC/ATJgFGtykpOeehHHwCZyAn2EwNBm1hkGwGPbDX/Af3IFXIfdqBl1h
        AqyF0/AP3AaNlJGQW3lNjcUBsAAOwmW4BZGBuTZUDz4ET8Ek+Bz0YnRNk8iloW1BLy6E3XARkoyLkytD
        H4QuMBbMqGfgJiQZVp/cGKoX+8McMKNegSSDGqLmDW0OneE1MKP+BGm9GKemDbUuPgezYRv8DkkZNQ3e
        hIHQC2wJW8B9l2VDL46BDWB3cw3idTErx+BLWAXvwFtgE9EXOoI3p6rSi8aiXtwKv0IxV7U+N8C4vgC/
        wQ+wBz6DJfAGDIUnoKJG68VOYI+6Dk7BVSj2qqbBA/wbNP4kfAsrQG9bvjz0ssoTNHacNHbAH1AOL2bB
        A7VttCYbKl+DdXoYPAoly7LxMnwMnup1KCUWy4HP96qfhyPwEbwIbSCzbONMAjPA7uZPqLYX06Cnfbd9
        4FT0DNi4pFZv+BTOwr9wv73YGL6fyczQeh0egVT6DkwEtW5gffTwL/A+PA3ezILSUD2Z9MvygIlrO7wE
        BbOzV3cjWELy5tUIc8pOsCQ6FzcoM+4UOAwOzHk02KvskDEaChrbEoZA1rGrlnDgtxe3TLaCBmVAd4ep
        sBesX3kz2Lr7FfSDguVHY03ZI8BxzBbQgE/6pbXKJXgXHEgalbsgi/LbYKDbkhXaBaXFttJZ1h2v5cEw
        cWBw9DsH9ru+qFOSt6nYfGH7aLymGgNt8F2ZOKatByeNUr27EqaB/bST0VxwXPsAbPFWgw3MN2Dp84U9
        EMMoS1uqU9aA799ojY0UeXc67AK9W+xJjwIThTXP7GijbgvqWNYNekIfeB6Gg3spD2Y5bIbj4HiXJnd4
        W6yvmYZ7Jxu/m3gdHN+KXaW8Alnkc9uB3Y/bf9u+ZWA4aYjJJ+k5Ysn5EPz/maU3ngVXIg7MaVaccbIa
        Gle0KLcyOMV4/R3jjO+G8sf30AOKkqfs3Z8MbgZMJmkTVSmGxqXRXnm3Ee+BK5qkGNbj1tWS5FzousXB
        +BCk6ZnLZWgkE40bkYmwBZLyh8muZHmyJpLxsAn8clYoUZXb0EgeuluIL8ASFX+my7iyydi1G5kHB8A6
        GH9YRKUMVYaUxroliR/4USirvEZmOEuIPbP1r37sVtJQ5Q3zC7vXODpsk1VFpHeN3UXg6sMk4QM94ZIT
        QwpZNx3ZrLketBuJiknvPg52Vc67dlU/grWwGrIRWQp+xtTgissk4ScIl2/+sYYZslpy+z8f3rz3UxWk
        d9tDtf/8xuRkRXCxEBQUFBQUFBRUSHV1dwHZzarFcHLq9AAAAABJRU5ErkJggg==
</value>
  </data>
</root>